{"version":3,"file":"static/js/937.79763afe.chunk.js","mappings":"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","sources":["components/DrugsItem/DrugsItem.styled.jsx","validation/inputsSchema.js","components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","components/CartList/CartList.styled.jsx","components/CartList/CartList.jsx","pages/CartPage/Cart.styled.jsx","pages/CartPage/Cart.jsx","redux/cart/selectors.js","redux/shops/selectors.js","services/orders-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DrugWrapp = styled.li`\n position: relative;\n display: flex;\n flex-direction: column;\n justify-content: space-evenly;\n\n padding: 1.5rem;\n border: 1px solid rgba(0, 0, 0, 0.1);\n max-height: 429px;\n max-width: 100%;\n width: 326px;\n background-color: white;\n transition: all 0.6s cubic-bezier(0.55, 0, 0.1, 1) 0s;\n cursor: pointer;\n @media screen and (min-width: 576px) {\n  max-height: 389px;\n  width: 245px;\n }\n @media screen and (min-width: 768px) {\n  max-height: 397px;\n  width: 335px;\n }\n @media screen and (min-width: 1200px) {\n  padding: 1.5rem;\n  width: 390px;\n  max-height: 480px;\n  justify-content: center;\n }\n @media screen and (min-width: 1400px) {\n  width: 400px;\n }\n > h3 {\n  text-transform: capitalize;\n }\n &:hover,\n &:focus {\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n   rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n   rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n }\n`;\n\nexport const Link = styled(NavLink)`\n width: 100%;\n padding: 20px 10px;\n font-weight: 500;\n border: 1px solid rgb(230 229 229 / 60%);\n border-radius: 4px;\n background-color: white;\n transition: all 0.6s cubic-bezier(0.55, 0, 0.1, 1) 0s;\n\n &:hover,\n &:focus {\n  color: orangered;\n  border: 1px solid orangered;\n }\n\n &.active {\n  color: white;\n  background-color: orangered;\n }\n`;\n\nexport const Line = styled.hr`\n margin: 0.25rem 0;\n\n border-top: 1px solid #000;\n opacity: 0.25;\n`;\n\nexport const TextWrapp = styled.div`\n overflow-y: scroll;\n max-width: 340px;\n\n > p {\n  font-size: 14px;\n  margin-top: 1rem;\n  font-family: Raleway, sans-serif;\n  @media screen and (min-width: 1200px) {\n   margin: 1rem 0px 0.5rem;\n  }\n }\n`;\n\nexport const PriceWrapp = styled.div`\n display: flex;\n justify-content: space-between;\n align-items: center;\n > p {\n  font-size: 18px;\n  font-weight: 600;\n  color: orangered;\n }\n`;\n\nexport const ImageWrapp = styled.div`\n display: flex;\n justify-content: center;\n > img {\n  max-width: 100%;\n  height: 180px;\n  display: flex;\n  align-items: center;\n  object-fit: cover;\n  transition: transform 0.15s ease-in-out;\n  @media screen and (min-width: 576px) {\n   height: 118px;\n  }\n  @media screen and (min-width: 768px) {\n   height: 150px;\n   object-fit: contain;\n  }\n  @media screen and (min-width: 1200px) {\n   object-fit: cover;\n   height: 233px;\n  }\n  &:hover {\n   transform: scale(1.05);\n  }\n }\n`;\n\nexport const Button = styled.button`\n padding: 8px 20px;\n border-radius: 4px;\n font-size: 14px;\n text-decoration: none;\n color: white;\n background-color: orangered;\n font-weight: 500;\n transition: all 0.6s cubic-bezier(0.55, 0, 0.1, 1) 0s;\n @media screen and (min-width: 1200px) {\n  font-size: 16px;\n }\n\n &:hover,\n &:focus {\n  background-color: grey;\n }\n`;\n\nexport const FavoriteWrapp = styled.div`\n position: absolute;\n top: 12px;\n right: 12px;\n width: 25px;\n cursor: pointer;\n transition: all 0.6s cubic-bezier(0.55, 0, 0.1, 1) 0s;\n`;\n","import * as Yup from 'yup';\n\nexport const InputsSchema = Yup.object().shape({\n name: Yup.string()\n  .required('Please enter your name')\n  .min(3, 'Name must be at least 3 characters')\n  .max(20, 'Name must not exceed 20 characters'),\n email: Yup.string().email('Invalid email').required('Please enter your email'),\n phone: Yup.string()\n  .matches(/^[0-9]+$/, 'Phone number must contain only digits')\n  .min(10, 'Phone number must be at least 10 digits')\n  .max(15, 'Phone number must not exceed 15 digits')\n  .required('Please enter your phone number'),\n address: Yup.string()\n  .required('Please enter your address')\n  .min(5, 'Address must be at least 5 characters')\n  .max(100, 'Address must not exceed 100 characters'),\n});\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n color: orangered;\n font-size: 12px;\n`;\n\nexport const FormContainer = styled.form`\n width: 100%;\n padding: 1.5rem 0;\n @media screen and (min-width: 1200px) {\n  width: 350px;\n }\n > h2 {\n  width: 200px;\n  padding: 0 0 5px 0;\n  text-transform: uppercase;\n  color: orangered;\n  font-size: 30px;\n  font-weight: 800;\n  font-family: 'Sulphur Point', sans-serif;\n }\n`;\n\nexport const FormGroup = styled.div`\n margin-top: 5px;\n transition: all 250ms ease-in-out 0s;\n @media screen and (min-width: 1200px) {\n  margin-top: 20px;\n }\n &:hover,\n &:focus {\n  color: orangered;\n }\n`;\n\nexport const Label = styled.label`\n font-weight: 500;\n margin-bottom: 8px;\n font-size: 16px;\n font-weight: 500;\n line-height: 1;\n letter-spacing: 0.4px;\n`;\n\nexport const Input = styled.input`\n width: 100%;\n padding: 10px 12px;\n border-radius: 8px;\n border: 1px solid #ccc;\n color: rgb(63, 63, 63);\n font-size: 16px;\n font-weight: 400;\n line-height: 1.5;\n transition: all 250ms ease-in-out 0s;\n &:hover,\n &:focus {\n  border: 1px solid orangered;\n  color: orangered;\n }\n`;\n\nexport const TextArea = styled.textarea`\n width: 100%;\n font-size: 16px;\n border: 1px solid #ccc;\n border-radius: 4px;\n cursor: pointer;\n\n resize: none;\n min-height: 100px;\n background-color: transparent;\n color: rgb(0, 0, 0);\n line-height: 1.5;\n padding: 1.375rem 0.75rem;\n font-family: Raleway, sans-serif;\n transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s;\n &:hover,\n &:focus {\n  border: 1px solid orangered;\n }\n`;\n","import React, { useState } from 'react';\n\nimport * as Yup from 'yup';\n\nimport { InputsSchema } from '../../validation/inputsSchema';\n\nimport {\n FormContainer,\n FormGroup,\n Label,\n Input,\n TextArea,\n ErrorText,\n} from './UserForm.styled';\n\nconst UserForm = React.forwardRef((props, ref) => {\n const [formData, setFormData] = useState({\n  name: '',\n  email: '',\n  phone: '',\n  address: '',\n });\n\n const [errors, setErrors] = useState({});\n\n const validationSchema = InputsSchema;\n\n const handleBlur = async e => {\n  const { id, value } = e.target;\n  try {\n   await Yup.reach(validationSchema, id).validate(value);\n   setErrors({ ...errors, [id]: '' });\n  } catch (error) {\n   setErrors({ ...errors, [id]: error.message });\n  }\n };\n\n const getData = () => {\n  return formData;\n };\n\n const clearFormValues = () => {\n  setFormData({\n   name: '',\n   email: '',\n   phone: '',\n   address: '',\n  });\n };\n\n React.useImperativeHandle(ref, () => ({\n  getData,\n  clearFormValues,\n }));\n\n return (\n  <FormContainer ref={ref}>\n   <h2>Shipping Information</h2>\n   <FormGroup>\n    <Label htmlFor=\"name\">Name</Label>\n    <Input\n     type=\"text\"\n     id=\"name\"\n     value={formData.name}\n     onBlur={handleBlur}\n     onChange={e => setFormData({ ...formData, name: e.target.value })}\n     required\n    />\n    {errors.name && <ErrorText>{errors.name}</ErrorText>}\n   </FormGroup>\n   <FormGroup>\n    <Label htmlFor=\"email\">Email</Label>\n    <Input\n     type=\"email\"\n     id=\"email\"\n     value={formData.email}\n     onBlur={handleBlur}\n     onChange={e => setFormData({ ...formData, email: e.target.value })}\n     required\n    />\n    {errors.email && <ErrorText>{errors.email}</ErrorText>}\n   </FormGroup>\n   <FormGroup>\n    <Label htmlFor=\"phone\">Phone</Label>\n    <Input\n     type=\"tel\"\n     id=\"phone\"\n     value={formData.phone}\n     onBlur={handleBlur}\n     onChange={e => setFormData({ ...formData, phone: e.target.value })}\n     required\n    />\n    {errors.phone && <ErrorText>{errors.phone}</ErrorText>}\n   </FormGroup>\n   <FormGroup>\n    <Label htmlFor=\"address\">Address</Label>\n    <TextArea\n     id=\"address\"\n     value={formData.address}\n     onBlur={handleBlur}\n     onChange={e => setFormData({ ...formData, address: e.target.value })}\n     required\n    />\n    {errors.address && <ErrorText>{errors.address}</ErrorText>}\n   </FormGroup>\n  </FormContainer>\n );\n});\n\nexport default UserForm;\n","import styled from 'styled-components';\nimport { ImageWrapp, PriceWrapp } from '../DrugsItem/DrugsItem.styled';\n\nexport const Price = styled(PriceWrapp)`\n align-items: baseline;\n @media screen and (min-width: 576px) {\n  align-items: center;\n }\n`;\n\nexport const Image = styled(ImageWrapp)`\n width: 150px;\n height: 100px;\n > img {\n  height: 100px;\n  object-fit: contain;\n }\n`;\n\nexport const CartWrapp = styled.div`\n padding: 1rem 0;\n width: 100%;\n @media screen and (min-width: 576px) {\n  padding: 1.5rem 0;\n }\n @media screen and (min-width: 1200px) {\n  margin-left: 120px;\n  width: 696px;\n }\n @media screen and (min-width: 1400px) {\n  width: 868px;\n }\n > h2 {\n  padding: 0 0 20px 0;\n  text-transform: uppercase;\n  color: orangered;\n  font-size: 30px;\n  font-weight: 800;\n  font-family: 'Sulphur Point', sans-serif;\n }\n > ul {\n  margin-top: 34px;\n  height: 350px;\n  overflow-y: scroll;\n  @media screen and (min-width: 576px) {\n   height: 510px;\n  }\n  > li {\n   display: flex;\n\n   padding: 1.5rem;\n   border: 1px solid rgba(0, 0, 0, 0.1);\n   max-height: 480px;\n   max-width: 100%;\n   background-color: white;\n   transition: all 0.6s cubic-bezier(0.55, 0, 0.1, 1) 0s;\n   cursor: pointer;\n   &:not(:last-child) {\n    margin-bottom: 10px;\n   }\n   &:hover,\n   &:focus {\n    border: 1px solid orangered;\n   }\n  }\n }\n`;\n\nexport const Content = styled.div`\n display: flex;\n flex-direction: column;\n padding: 0 0 0 18px;\n width: 100%;\n justify-content: space-evenly;\n @media screen and (min-width: 576px) {\n  padding: 0 0 0 28px;\n }\n > h3 {\n  text-transform: capitalize;\n }\n > p {\n  font-size: 14px;\n }\n`;\n\nexport const Text = styled.h4`\n font-size: 16px;\n font-weight: 300;\n color: orangered;\n`;\n\nexport const ButtonWrapp = styled.div`\n display: flex;\n justify-content: flex-end;\n`;\n\nexport const Button = styled.button`\n cursor: pointer;\n\n padding: 8px 20px;\n border-radius: 4px;\n text-decoration: none;\n color: white;\n background-color: orangered;\n font-weight: 500;\n transition: all 0.6s cubic-bezier(0.55, 0, 0.1, 1) 0s;\n\n &:hover,\n &:focus {\n  background-color: grey;\n }\n`;\n\nexport const ButtonDelete = styled(Button)`\n background-color: grey;\n color: white;\n\n &:hover,\n &:focus {\n  background-color: orangered;\n }\n`;\n\nexport const Input = styled.input`\n margin-left: 30px;\n width: 70px;\n padding: 8px 12px;\n border-radius: 8px;\n border: 1px solid #ccc;\n color: rgb(63, 63, 63);\n\n transition: all 0.6s cubic-bezier(0.55, 0, 0.1, 1) 0s;\n @media screen and (min-width: 576px) {\n  margin-right: 10px;\n  margin-left: 20px;\n  width: 90px;\n }\n &:hover,\n &:focus {\n  border-color: orangered;\n }\n`;\n\nexport const InputWrapp = styled.div`\n display: flex;\n flex-direction: column;\n gap: 5px;\n @media screen and (min-width: 576px) {\n  flex-direction: row;\n  gap: 0px;\n }\n`;\n\nexport const PriceText = styled.p`\n margin: 56px 0 0 0;\n\n font-size: 18px;\n font-weight: 500;\n @media screen and (min-width: 576px) {\n  margin: 46px 0 0 0;\n }\n @media screen and (min-width: 768px) {\n  margin: 56px 0 0 0;\n }\n > span {\n  color: orangered;\n }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n clearCart,\n updateCartItem,\n removeCartItem,\n} from '../../redux/cart/slice';\n\nimport {\n CartWrapp,\n Content,\n Text,\n Button,\n ButtonWrapp,\n Input,\n InputWrapp,\n PriceText,\n ButtonDelete,\n Image,\n Price,\n} from './CartList.styled';\n\nconst CartList = () => {\n const dispatch = useDispatch();\n const cartList = useSelector(state => state.cart.cartList);\n\n const totalPrice = parseFloat(\n  cartList\n   .reduce((total, item) => {\n    return total + item.price * item.count;\n   }, 0)\n   .toFixed(2)\n );\n\n const handleQuantityChange = (id, e) => {\n  const newQuantity = parseInt(e.target.value);\n  dispatch(updateCartItem({ id, count: newQuantity }));\n };\n\n const handleRemoveItem = id => {\n  dispatch(removeCartItem(id));\n };\n\n const handleClearCart = () => {\n  dispatch(clearCart());\n };\n\n return (\n  <CartWrapp>\n   <h2>Cart</h2>\n   {cartList.length > 0 && (\n    <ButtonWrapp>\n     <Button onClick={handleClearCart}>Remove All</Button>\n    </ButtonWrapp>\n   )}\n   {cartList.length > 0 ? (\n    <ul>\n     {cartList.map(({ id, name, photo, count }) => (\n      <li key={id}>\n       <Image>\n        <img src={photo} alt={name} width={100} />\n       </Image>\n\n       <Content>\n        <h3>{name}</h3>\n        <Price>\n         <Text>Count:</Text>\n         <InputWrapp>\n          <Input\n           type=\"number\"\n           value={count}\n           onChange={e => handleQuantityChange(id, e)}\n           min={1}\n           max={100}\n          />\n          <ButtonDelete onClick={() => handleRemoveItem(id)}>\n           Remove\n          </ButtonDelete>\n         </InputWrapp>\n        </Price>\n       </Content>\n      </li>\n     ))}\n    </ul>\n   ) : (\n    <div style={{ height: 505, paddingTop: '50px' }}>\n     <p>Empty</p>\n    </div>\n   )}\n   <PriceText>\n    Total Price: <span>{totalPrice}</span>\n   </PriceText>\n  </CartWrapp>\n );\n};\n\nexport default CartList;\n","import styled from 'styled-components';\n\nexport const CartWrapp = styled.div`\n width: 100%;\n min-height: 88vh;\n padding-bottom: 8px;\n @media screen and (min-width: 1200px) {\n  display: flex;\n  justify-content: space-between;\n }\n`;\n\nexport const SubmitWrapp = styled.div`\n display: flex;\n justify-content: center;\n @media screen and (min-width: 576px) {\n  justify-content: flex-end;\n }\n`;\n\nexport const Button = styled.button`\n cursor: pointer;\n padding: 12px 64px;\n text-decoration: none;\n color: orangered;\n background-color: white;\n font-weight: 500;\n font-size: 16px;\n border: 2px solid orangered;\n transition: all 0.6s cubic-bezier(0.55, 0, 0.1, 1) 0s;\n @media screen and (min-width: 768px) {\n  padding: 18px 84px;\n  font-size: 18px;\n }\n &:hover,\n &:focus {\n  background-color: orangered;\n  color: white;\n }\n`;\n","import React, { useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserForm from '../../components/UserForm/UserForm';\nimport CartList from '../../components/CartList/CartList';\n\nimport { addToOrder } from '../../services/orders-api';\nimport { clearCart } from '../../redux/cart/slice';\nimport { getShops } from '../../redux/shops/selectors';\nimport { getCartList } from '../../redux/cart/selectors';\n\nimport { CartWrapp, SubmitWrapp, Button } from './Cart.styled';\n\nconst Cart = () => {\n const dispatch = useDispatch();\n const shops = useSelector(getShops);\n const cartList = useSelector(getCartList);\n const formDataRef = useRef(null);\n\n useEffect(() => {\n  localStorage.setItem('localStorageСart', JSON.stringify(cartList));\n }, [cartList]);\n\n const findShopProductById = (id, shops) => {\n  for (const shop of shops) {\n   for (const product of shop.drugslist) {\n    if (product.id === id) {\n     return shop.name;\n    }\n   }\n  }\n  return null;\n };\n\n const generateRandomNumber = () => {\n  return Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n };\n\n const orderNumber = generateRandomNumber();\n\n const handleSubmit = async e => {\n  e.preventDefault();\n  const formData = formDataRef.current.getData();\n\n  const orderList = cartList.map(item => ({\n   name: item.name,\n   price: item.price,\n   count: item.count,\n   totalByDrug: item.price * item.count,\n   id: item.id,\n   photo: item.photo,\n  }));\n\n  const groupedOrderList = orderList.reduce((acc, item) => {\n   const shopName = findShopProductById(item.id, shops);\n   acc[shopName] = acc[shopName] || [];\n   acc[shopName].push(item);\n   return acc;\n  }, {});\n\n  const drugslist = Object.entries(groupedOrderList).map(([shop, items]) => ({\n   shop,\n   orderlist: items.map(item => item),\n   totalPriceByShop: items\n    .reduce((total, drug) => total + Number(drug.totalByDrug), 0)\n    .toFixed(2),\n  }));\n\n  const totalPriceByShop = orderList.reduce(\n   (total, drug) => total + drug.totalByDrug,\n   0\n  );\n\n  const orderData = {\n   ...formData,\n   drugslist,\n   total: totalPriceByShop.toFixed(2),\n   order: orderNumber,\n  };\n\n  try {\n   await addToOrder(orderData);\n   dispatch(clearCart());\n   formDataRef.current.clearFormValues();\n   alert(\n    `    We got it! Order number: ${orderNumber}.\n    Check your inbox shortly for a confirmation email.`\n   );\n  } catch (error) {\n   console.error('Error while adding order:', error);\n  }\n };\n\n return (\n  <>\n   <h1 hidden>Shopping cart</h1>\n   <section>\n    <CartWrapp>\n     <UserForm ref={formDataRef} />\n     <CartList />\n    </CartWrapp>\n    <SubmitWrapp>\n     <Button type=\"submit\" onClick={handleSubmit}>\n      Submit\n     </Button>\n    </SubmitWrapp>\n   </section>\n  </>\n );\n};\n\nexport default Cart;\n","export const getCartList = state => state.cart.cartList;\n\n// export const getLoading = ({ cart }) => cart.loading;\n\n// export const getError = state => state.cart.error;\n","export const getShops = state => state.shops.items;\n\nexport const getDrugsList = state => state.shops.drugsList;\n\nexport const getLoading = ({ shops }) => shops.loading;\n\nexport const getError = state => state.shops.error;\n","import axios from 'axios';\n\nconst instance = axios.create({\n baseURL: 'https://medicine-delivery-app-backend-9d0u.onrender.com/api',\n});\n\nexport const getOrders = async () => {\n try {\n  const { data } = await instance.get('/orders');\n  return data;\n } catch (error) {\n  console.error('Error adding order:', error);\n  throw error;\n }\n};\n\nexport const addToOrder = async orderData => {\n try {\n  const { data } = await instance.post('/orders', orderData);\n  return data;\n } catch (error) {\n  console.error('Error adding order:', error);\n  throw error;\n }\n};\n"],"names":["DrugWrapp","styled","li","_templateObject","_taggedTemplateLiteral","Line","NavLink","_templateObject2","hr","_templateObject3","TextWrapp","div","_templateObject4","PriceWrapp","_templateObject5","ImageWrapp","_templateObject6","Button","button","_templateObject7","FavoriteWrapp","_templateObject8","InputsSchema","Yup","shape","name","required","min","max","email","phone","matches","address","ErrorText","p","FormContainer","form","FormGroup","Label","label","Input","input","TextArea","textarea","React","props","ref","formData","setFormData","useState","errors","setErrors","validationSchema","handleBlur","async","id","value","e","target","validate","error","message","getData","clearFormValues","_jsxs","children","_jsx","htmlFor","type","onBlur","onChange","Price","Image","CartWrapp","Content","Text","h4","ButtonWrapp","ButtonDelete","_templateObject9","InputWrapp","_templateObject10","PriceText","_templateObject11","CartList","dispatch","useDispatch","cartList","useSelector","state","cart","totalPrice","parseFloat","reduce","total","item","price","count","toFixed","length","onClick","handleClearCart","clearCart","map","_ref","photo","src","alt","width","handleQuantityChange","newQuantity","parseInt","updateCartItem","removeCartItem","handleRemoveItem","style","height","paddingTop","SubmitWrapp","Cart","shops","getShops","getCartList","formDataRef","useRef","useEffect","localStorage","setItem","JSON","stringify","orderNumber","Math","floor","random","Number","MAX_SAFE_INTEGER","_Fragment","hidden","UserForm","preventDefault","current","orderList","totalByDrug","groupedOrderList","acc","shopName","findShopProductById","shop","product","drugslist","push","orderData","Object","entries","items","orderlist","totalPriceByShop","drug","order","addToOrder","alert","concat","console","getDrugsList","drugsList","getLoading","loading","instance","axios","create","baseURL","getOrders","data","get","post"],"sourceRoot":""}