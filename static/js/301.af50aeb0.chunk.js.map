{"version":3,"file":"static/js/301.af50aeb0.chunk.js","mappings":"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","sources":["pages/HistoryPage/History.jsx","redux/shops/selectors.js","services/orders-api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getDrugsList } from '../../redux/shops/selectors';\nimport { getOrders } from '../../services/orders-api';\n\nconst History = () => {\n const [orders, setOrders] = useState([]);\n const [searchInput, setSearchInput] = useState('');\n const [searchResults, setSearchResults] = useState([]);\n const drugsList = useSelector(getDrugsList);\n\n useEffect(() => {\n  const fetchOrders = async () => {\n   try {\n    const ordersData = await getOrders();\n    setOrders(ordersData);\n   } catch (error) {\n    console.error('Error fetching orders:', error);\n   }\n  };\n  fetchOrders();\n }, []);\n\n const findProductPhotoById = id => {\n  const drug = drugsList.find(item => item.id === id);\n  console.log(drugsList);\n  return drug;\n };\n\n const handleSearchInputChange = event => {\n  setSearchInput(event.target.value);\n };\n\n const handleSearch = () => {\n  const searchTerm = searchInput.toLowerCase().trim();\n  if (!searchTerm) {\n   setSearchResults([]);\n   return;\n  }\n\n  const results = orders.filter(\n   order =>\n    order.email.toLowerCase().includes(searchTerm) ||\n    order.phone.includes(searchTerm) ||\n    order.id === searchTerm\n  );\n\n  setSearchResults(results);\n };\n\n return (\n  <>\n   <h1 hidden>Order history</h1>\n   <section>\n    <div>\n     <input\n      type=\"text\"\n      placeholder=\"Enter email, phone number, or order ID\"\n      value={searchInput}\n      onChange={handleSearchInputChange}\n     />\n     <button onClick={handleSearch}>Search</button>\n    </div>\n    {searchResults.length > 0 ? (\n     <div>\n      <h2>Search Results:</h2>\n      <ul>\n       {searchResults.map(order => (\n        <li key={order.id}>\n         <h3>Order #{order.order}</h3>\n         <div>\n          <h4>User information:</h4>\n          <p>{order.name}</p>\n          <p>{order.email}</p>\n          <p>{order.phone}</p>\n         </div>\n         <div>\n          <ul>\n           {order.drugslist.map(item => (\n            <li key={item.id}>\n             <h5>Shop: {item.shop}</h5>\n             <ul>\n              Order:\n              {item.orderlist.map(drug => (\n               <li key={drug.id}>\n                <img\n                 src={findProductPhotoById(drug.id)}\n                 alt={drug.name}\n                 loading=\"lazy\"\n                />\n                <h6>{drug.name}</h6>\n                <p>\n                 Price: <span>{drug.totalByDrug}</span>\n                </p>\n               </li>\n              ))}\n              <p>\n               Total by shop: <span>{item.totalPriceByShop}</span>\n              </p>\n             </ul>\n            </li>\n           ))}\n          </ul>\n         </div>\n         <p>\n          Total: <span>{order.total}</span>\n         </p>\n        </li>\n       ))}\n      </ul>\n     </div>\n    ) : (\n     <h2>No search results found.</h2>\n    )}\n   </section>\n  </>\n );\n};\n\nexport default History;\n","export const getShops = state => state.shops.items;\n\nexport const getDrugsList = state => state.shops.drugsList;\n\nexport const getLoading = ({ shops }) => shops.loading;\n\nexport const getError = state => state.shops.error;\n","import axios from 'axios';\n\nconst instance = axios.create({\n baseURL: 'https://medicine-delivery-app-backend-9d0u.onrender.com/api',\n});\n\nexport const getOrders = async () => {\n try {\n  const { data } = await instance.get('/orders');\n  return data;\n } catch (error) {\n  console.error('Error adding order:', error);\n  throw error;\n }\n};\n\nexport const addToOrder = async orderData => {\n try {\n  const { data } = await instance.post('/orders', orderData);\n  return data;\n } catch (error) {\n  console.error('Error adding order:', error);\n  throw error;\n }\n};\n"],"names":["History","orders","setOrders","useState","searchInput","setSearchInput","searchResults","setSearchResults","drugsList","useSelector","getDrugsList","useEffect","async","ordersData","getOrders","error","console","fetchOrders","findProductPhotoById","id","drug","find","item","log","_jsxs","_Fragment","children","_jsx","hidden","type","placeholder","value","onChange","event","target","onClick","handleSearch","searchTerm","toLowerCase","trim","results","filter","order","email","includes","phone","length","map","name","drugslist","shop","orderlist","src","alt","loading","totalByDrug","totalPriceByShop","total","getShops","state","shops","items","getLoading","_ref","instance","axios","create","baseURL","data","get","addToOrder","post","orderData"],"sourceRoot":""}